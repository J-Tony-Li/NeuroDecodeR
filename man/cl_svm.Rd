% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cl_svm.R
\name{cl_svm}
\alias{cl_svm}
\title{A support vector machine classifier (CL)}
\usage{
cl_svm(...)
}
\arguments{
\item{...}{All parameters that are available in the e1071 package svm()
object should work with this CL object.}
}
\description{
This classifier uses the e1071 package to implement a support vector machine.
}
\details{
A support vector machine (SVM) is a classifier that learns a function \emph{f} that
minimizes the hinge loss between predictions made on the training data, while
also applying a penalty for more complex \emph{f} (the penalty is based on the norm
of \emph{f} in a reproducing kernel Hilbert space). The SVM has a parameter \emph{C} that
controls the trade off between the empirical loss (i.e., a smaller prediction
error on the training set), and the complexity of the \emph{f}. SVMs can use
different kernels to create nonlinear decision boundaries.

SVMs are work on binary classification problems, so to do
multi-class classification, an \emph{all-pairs} classification scheme (which is
the default for the e1071 package). In the all-pairs scheme,training separate
classifiers for all pairs of labels (i.e., if there are 100 different classes
then nchoosek(100, 2) = 4950 different classifiers are trained). Testing the
classifier in all-pairs involves having all classifiers classify the test
point, and then the class label is given to the class the was chosen most
often by the binary classifiers (in the case of a tie in the number of
classes that won a contest the class label is randomly chosen). The decision
values for all-pairs are the number of contests won by each class (for each
test point).
}
\examples{
# using the default e1071 parameters
cl <- cl_svm()

# using a linear kernel
cl <- cl_svm(kernel = "linear")
 
}
\seealso{
e1071

Other classifier: 
\code{\link{cl_max_correlation}()},
\code{\link{cl_poisson_naive_bayes}()}
}
\concept{classifier}
